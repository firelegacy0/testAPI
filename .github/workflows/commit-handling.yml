name: Test Commit Message Handling

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Update Request
        run: |
          IMAGE_REGISTRY=dummy.registry
          image_tag=latest
          formatted_ref=1234567abcdef
          
          images_to_update=(
              "$IMAGE_REGISTRY/test/repo:$image_tag"
              "$IMAGE_REGISTRY/test/repo-worker:$image_tag"
          )

          oldIFS=$IFS
          IFS=","
          echo "PROJECT_IMAGES=${images_to_update[*]}" >> $GITHUB_ENV
          IFS=$oldIFS

          # Handle special characters in commit message
          head_commit_message="${{ github.event.pull_request.title }}"
          echo "ORIGINAL_COMMIT_MESSAGE=${head_commit_message}" >> $GITHUB_ENV
          truncated_commit_message=$(printf "%s\n" "$head_commit_message" | head -1)
          echo "TRUNCATED_COMMIT_MESSAGE=${truncated_commit_message}" >> $GITHUB_ENV
          echo "UPDATE_DESCRIPTION=${truncated_commit_message}" >> $GITHUB_ENV
          echo "UPDATE_RELEASE=${formatted_ref:0:7}" >> $GITHUB_ENV

      - name: Display environment variables
        run: |
          echo "PROJECT_IMAGES=${PROJECT_IMAGES}"
          echo "ORIGINAL_COMMIT_MESSAGE=${ORIGINAL_COMMIT_MESSAGE}"
          echo "TRUNCATED_COMMIT_MESSAGE=${TRUNCATED_COMMIT_MESSAGE}"
          echo "UPDATE_DESCRIPTION=${UPDATE_DESCRIPTION}"
          echo "UPDATE_RELEASE=${UPDATE_RELEASE}"
        env:
          PROJECT_IMAGES: ${{ env.PROJECT_IMAGES }}
          ORIGINAL_COMMIT_MESSAGE: ${{ env.ORIGINAL_COMMIT_MESSAGE }}
          TRUNCATED_COMMIT_MESSAGE: ${{ env.TRUNCATED_COMMIT_MESSAGE }}
          UPDATE_DESCRIPTION: ${{ env.UPDATE_DESCRIPTION }}
          UPDATE_RELEASE: ${{ env.UPDATE_RELEASE }}
