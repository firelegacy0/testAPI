name: PR Labeler

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, synchronize, ready_for_review, converted_to_draft]

jobs:
  label-pr:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - uses: actions/labeler@v5
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        configuration-path: .github/labeler.yml
        sync-labels: true

    - name: Update labels for Draft PR
      if: github.event.pull_request.draft == true || github.event.action == 'converted_to_draft'
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prNumber = context.payload.pull_request.number;
          const owner = context.repo.owner;
          const repo = context.repo.repo;

          // Add 'on hold' label
          await github.rest.issues.addLabels({
            owner,
            repo,
            issue_number: prNumber,
            labels: ['on hold']
          });

          // Remove 'requires review' label if it was converted_to_draft
          try {
            await github.rest.issues.removeLabel({
              owner,
              repo,
              issue_number: prNumber,
              name: 'requires review'
            });
            console.log("Label 'requires review' removed");
          } catch (error) {
            if (error.status !== 404) {
              throw error;
            }
            console.log("Label 'requires review' not found, skipping.");
          }

    - name: Label PR as 'requires review' when ready
      if: github.event.pull_request.draft == false || github.event.action == 'ready_for_review'
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prNumber = context.payload.pull_request.number;
          const owner = context.repo.owner;
          const repo = context.repo.repo;

          // Add 'requires review' label
          await github.rest.issues.addLabels({
            owner,
            repo,
            issue_number: prNumber,
            labels: ['requires review']
          });

          // Remove 'on hold' label if it was converted to ready_for_review
          try {
            await github.rest.issues.removeLabel({
              owner,
              repo,
              issue_number: prNumber,
              name: 'on hold'
            });
            console.log("Label 'on hold' removed");
          } catch (error) {
            if (error.status !== 404) {
              throw error;
            }
            console.log("Label 'on hold' not found, skipping.");
          }
