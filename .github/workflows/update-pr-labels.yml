name: auto-pr-update-label

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_review:
    types: [submitted, dismissed]

jobs:
  update-labels:
    runs-on: ubuntu-latest
    steps:
    - name: Update PR Labels
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prNumber = context.payload.pull_request.number;
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          const reviewState = context.payload.review.state;

          let labelsUpdated = false;
          let labelToAdd = '';
          let labelToRemove = [];

          if (reviewState === 'approved') {
            labelToAdd = 'approved';
            labelsToRemove = ['changes requested', 'requires review'];

          } else if (reviewState === 'changes_requested') {
            labelToAdd = 'changes requested';
            labelsToRemove = ['approved', 'requires review'];

          } else if (reviewState === 'dismissed') {
            labelToAdd = 'requires review';
            labelsToRemove = ['approved', 'changes requested'];
          }

          // Check if there are labels to remove, because any comments added during
          // Changes Requested State is considered as pull_request_review submitted 
          if (labelsToRemove.length > 0 ) {
            console.log("Inside labels check")
            for (const label of labelsToRemove) {
              try {
                await github.rest.issues.removeLabel({
                  owner,
                  repo,
                  issue_number: prNumber,
                  name: label
                });
                console.log(`Label '${label}' removed`);
                labelsUpdated = true;
              } catch (error) {
                if (error.status !== 404) {
                  throw error;
                }
                console.log(`Label '${label}' not found, skipping.`);
              }
            }
          }

          // Check if labelToAdd is non-empty before attempting to add it
          if (labelToAdd) {
            try {
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: prNumber,
                labels: [labelToAdd]
              });
              console.log(`Label '${labelToAdd}' added`);
              labelsUpdated = true;

            } catch (error) {
              throw error;
            }
          }

          if (!labelsUpdated) {
            console.log("No new review action, no labels updated")
          }